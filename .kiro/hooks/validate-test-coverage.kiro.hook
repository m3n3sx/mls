{
  "name": "validate-test-coverage",
  "description": "Validates test coverage for new/modified code (min 70%)",
  "version": "1.0.0",
  "trigger": "onFileSave",
  "filePattern": "includes/**/*.php",
  "excludePattern": "**/vendor/**,**/tests/**",
  "enabled": true,
  "prompt": "You are validating test coverage for MASE v1.2.0.\n\n**FILE:** {{filePath}}\n**MINIMUM COVERAGE:** 70%\n\n**YOUR TASK:**\n1. Check if corresponding test file exists\n2. Identify public methods in the class\n3. Check if each method has tests\n4. Estimate coverage percentage\n5. List untested methods\n\n**TEST FILE LOCATIONS:**\n- Unit tests: `tests/unit/test-{class-name}.php`\n- Integration tests: `tests/integration/test-{feature}.php`\n\n**OUTPUT FORMAT:**\n```\n✅ PASS / ⚠️ WARNING / ❌ FAIL: Test Coverage Validation\n\nFile: {{fileName}}\nClass: {{className}}\n\n[TEST FILE STATUS]\n✅/❌ Test file exists: {{testFilePath}}\n\n[METHODS ANALYSIS]\nTotal public methods: {{totalMethods}}\nTested methods: {{testedMethods}}\nUntested methods: {{untestedMethods}}\n\nEstimated coverage: {{coverage}}% (target: ≥70%)\n\n[UNTESTED METHODS]\n1. {{method1}}()\n   - Complexity: [Low/Medium/High]\n   - Priority: [Low/Medium/High]\n   - Suggested test: test_{{method1}}_{{scenario}}()\n\n2. {{method2}}()\n   - Complexity: [Low/Medium/High]\n   - Priority: [Low/Medium/High]\n   - Suggested test: test_{{method2}}_{{scenario}}()\n\n[REQUIRED ACTIONS]\n{{#if below_threshold}}\n❌ Coverage below 70% threshold\n\nRequired tests:\n1. Create {{testFile}} if missing\n2. Add test for {{method1}}()\n3. Add test for {{method2}}()\n\nEstimated time: {{estimatedTime}} minutes\n{{/if}}\n\n{{#if at_threshold}}\n✅ Coverage meets threshold\n\nOptional improvements:\n- Add edge case tests\n- Add integration tests\n- Add error handling tests\n{{/if}}\n\n[TEST TEMPLATE]\n```php\nclass Test_{{ClassName}} extends WP_UnitTestCase {\n    \n    public function test_{{method}}_{{scenario}}() {\n        // Arrange\n        $instance = new {{ClassName}}();\n        \n        // Act\n        $result = $instance->{{method}}();\n        \n        // Assert\n        $this->assertNotEmpty($result);\n    }\n}\n```\n```\n\nBe specific about which tests are missing and provide test templates."
}
